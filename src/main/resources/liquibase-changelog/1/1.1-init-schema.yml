databaseChangeLog:
      - changeSet:
              id: 1
              author: bh
              changes:
                    - sql: |
                            CREATE TABLE parent (
                                id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                first_name VARCHAR(50) NOT NULL,
                                last_name VARCHAR(50) NOT NULL,
                                email VARCHAR(100) NOT NULL UNIQUE,
                                password VARCHAR(100) NOT NULL,
                                phone VARCHAR(20),
                                creation_date TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
                                created_by VARCHAR(40) DEFAULT '',
                                update_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                                updated_by VARCHAR(40) DEFAULT ''
                            );
                    - sql: |
                            CREATE TABLE child (
                                id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                parent_id BIGINT NOT NULL,
                                first_name VARCHAR(50) NOT NULL,
                                last_name VARCHAR(50) NOT NULL,
                                birthdate DATE NOT NULL,
                                notes VARCHAR(3000),
                                creation_date TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
                                created_by VARCHAR(40) DEFAULT '',
                                update_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                                updated_by VARCHAR(40) DEFAULT '',
                                CONSTRAINT fk_child_parent FOREIGN KEY (parent_id) REFERENCES parent(id) ON DELETE CASCADE
                            );
                    - sql: |
                            CREATE TABLE notification (
                                id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                parent_id BIGINT NOT NULL,
                                child_id BIGINT,
                                message VARCHAR(300) NOT NULL,
                                is_read BOOLEAN DEFAULT false,
                                creation_date TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
                                created_by VARCHAR(40) DEFAULT '',
                                update_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                                updated_by VARCHAR(40) DEFAULT '',
                                CONSTRAINT fk_notification_parent FOREIGN KEY (parent_id) REFERENCES parent(id) ON DELETE CASCADE,
                                CONSTRAINT fk_notification_child FOREIGN KEY (child_id) REFERENCES child(id)
                            );
                    - sql: |
                            CREATE TABLE illness (
                                id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                name VARCHAR(100) NOT NULL,
                                illness_type VARCHAR(30) NOT NULL,
                                description VARCHAR(3000),
                                child_id BIGINT NOT NULL,
                                event_start DATE NOT NULL DEFAULT CURRENT_DATE,
                                event_end DATE,
                                creation_date TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
                                created_by VARCHAR(40) DEFAULT '',
                                update_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                                updated_by VARCHAR(40) DEFAULT '',
                                CONSTRAINT fk_illness_child FOREIGN KEY (child_id) REFERENCES child(id) ON DELETE CASCADE
                            );
                    - sql: |
                            CREATE TABLE chronic_condition (
                                id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                name VARCHAR(100) NOT NULL,
                                description VARCHAR(3000),
                                instructions VARCHAR(3000),
                                notes VARCHAR(3000),
                                child_id BIGINT NOT NULL,
                                event_start DATE NOT NULL DEFAULT CURRENT_DATE,
                                event_end DATE,
                                creation_date TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
                                created_by VARCHAR(40) DEFAULT '',
                                update_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                                updated_by VARCHAR(40) DEFAULT '',
                                CONSTRAINT fk_chronic_condition_child FOREIGN KEY (child_id) REFERENCES child(id) ON DELETE CASCADE
                            );
                    - sql: |
                            CREATE TABLE injury (
                                id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                name VARCHAR(100) NOT NULL,
                                injury_type VARCHAR(30) NOT NULL,
                                description VARCHAR(3000),
                                child_id BIGINT NOT NULL,
                                event_start DATE NOT NULL DEFAULT CURRENT_DATE,
                                event_end DATE,
                                creation_date TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
                                created_by VARCHAR(40) DEFAULT '',
                                update_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                                updated_by VARCHAR(40) DEFAULT '',
                                CONSTRAINT fk_injury_child FOREIGN KEY (child_id) REFERENCES child(id) ON DELETE CASCADE
                            );
                    - sql: |
                              CREATE TABLE medication (
                                  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                  name VARCHAR(100) NOT NULL,
                                  brand VARCHAR(100),
                                  description VARCHAR(3000),
                                  dosage_form VARCHAR(50) NOT NULL,
                                  open_date DATE,
                                  instructions VARCHAR(3000),
                                  creation_date TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
                                  created_by VARCHAR(40) DEFAULT '',
                                  update_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                                  updated_by VARCHAR(40) DEFAULT ''
                              );
                    - sql: |
                            CREATE TABLE prescription (
                                id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                child_id BIGINT NOT NULL,
                                illness_id BIGINT,
                                injury_id BIGINT,
                                chronic_condition_id BIGINT,
                                medication_id BIGINT NOT NULL,
                                dosage_amount NUMERIC(6,2) NOT NULL,
                                dosage_unit VARCHAR(20) NOT NULL,
                                frequency_per_day INT NOT NULL,
                                start_date DATE NOT NULL,
                                end_date DATE,
                                notes VARCHAR(3000),
                                creation_date TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
                                created_by VARCHAR(40) DEFAULT '',
                                update_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                                updated_by VARCHAR(40) DEFAULT '',
                                CONSTRAINT fk_prescription_child FOREIGN KEY (child_id) REFERENCES child(id) ON DELETE CASCADE,
                                CONSTRAINT fk_prescription_medication FOREIGN KEY (medication_id) REFERENCES medication(id) ON DELETE RESTRICT,
                                CONSTRAINT fk_prescription_illness FOREIGN KEY (illness_id) REFERENCES illness(id),
                                CONSTRAINT fk_prescription_injury FOREIGN KEY (injury_id) REFERENCES injury(id),
                                CONSTRAINT fk_prescription_chronic_condition FOREIGN KEY (chronic_condition_id) REFERENCES chronic_condition(id)
                            );
                    - sql: |
                            CREATE TABLE dosage_log (
                                id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                prescription_id BIGINT,
                                dosage_given NUMERIC(6,2) NOT NULL,
                                administered_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
                                notes VARCHAR(3000),
                                creation_date TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
                                created_by VARCHAR(40) DEFAULT '',
                                update_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                                updated_by VARCHAR(40) DEFAULT '',
                                CONSTRAINT fk_dosage_log_prescription FOREIGN KEY (prescription_id) REFERENCES prescription(id) ON DELETE CASCADE
                            );
                    - sql: |
                            CREATE TABLE medication_product (
                                id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                medication_identifier VARCHAR(255),
                                product_name VARCHAR(255),
                                common_name VARCHAR(255),
                                administration_method VARCHAR(3000),
                                pharmaceutical_form VARCHAR(3000),
                                active_substance VARCHAR(3000),
                                manufacturer_name VARCHAR(3000),
                                leaflet VARCHAR(3000),
                                product_characteristics VARCHAR(3000),
                                creation_date TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
                                created_by VARCHAR(40) DEFAULT '',
                                update_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                                updated_by VARCHAR(40) DEFAULT ''
                            );
                    - sql: |
                              CREATE TABLE illness_medications (
                                  illness_id BIGINT NOT NULL,
                                  medication_id BIGINT NOT NULL,
                                  PRIMARY KEY (illness_id, medication_id),
                                  CONSTRAINT fk_illness_medications_illness FOREIGN KEY (illness_id) REFERENCES illness(id) ON DELETE CASCADE,
                                  CONSTRAINT fk_illness_medications_medication FOREIGN KEY (medication_id) REFERENCES medication(id) ON DELETE CASCADE
                              );
                    - sql: |
                              CREATE TABLE injury_medications (
                                  injury_id BIGINT NOT NULL,
                                  medication_id BIGINT NOT NULL,
                                  PRIMARY KEY (injury_id, medication_id),
                                  CONSTRAINT fk_injury_medications_injury FOREIGN KEY (injury_id) REFERENCES injury(id) ON DELETE CASCADE,
                                  CONSTRAINT fk_injury_medications_medication FOREIGN KEY (medication_id) REFERENCES medication(id) ON DELETE CASCADE
                              );
                    - sql: |
                              CREATE TABLE chronic_condition_medications (
                                  chronic_condition_id BIGINT NOT NULL,
                                  medication_id BIGINT NOT NULL,
                                  PRIMARY KEY (chronic_condition_id, medication_id),
                                  CONSTRAINT fk_chronic_condition_medications_chronic_condition FOREIGN KEY (chronic_condition_id) REFERENCES chronic_condition(id) ON DELETE CASCADE,
                                  CONSTRAINT fk_chronic_condition_medications_medication FOREIGN KEY (medication_id) REFERENCES medication(id) ON DELETE CASCADE
                              );